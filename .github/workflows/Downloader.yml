name: Download URLs Every Hour

on:
  schedule:
    # This cron expression will run the workflow every hour on the hour
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual triggers

jobs:
  download_urls:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Debug the working directory and download files
    - name: Debug and Download files
      run: |
        # Check current working directory to ensure we are in the repo root
        echo "Current working directory: $(pwd)"
        
        # Print out the repository folder structure for debug
        echo "Directory listing of $(pwd):"
        ls -R

        # Create a unique folder name based on current timestamp
        folder_name="downloaded_content_$(date +'%Y%m%d_%H%M%S')"
        
        # Ensure folder is created inside the repo directory
        mkdir -p "$folder_name"
        echo "Folder created at: $folder_name"

        # Define URLs
        urls=("https://example.com/index.html")

        # Download each URL into the timestamped folder
        for url in "${urls[@]}"; do
          filename=$(basename "$url")
          echo "Downloading: $url"
          curl -L -o "$folder_name/$filename" "$url" && echo "Downloaded $filename successfully" || echo "Failed to download $filename"
        done

        # List the files in the folder to verify
        echo "Files in $folder_name:"
        ls "$folder_name"

    # Step 3: Commit and push downloaded files
    - name: Commit and push files
      run: |
        # Check that we are in the correct directory
        echo "Current working directory (again for sanity check): $(pwd)"
        
        # Print out the folder structure of the repository again
        echo "Directory structure of $(pwd):"
        ls -R

        # Force add files inside the folder (even if untracked or ignored)
        git add -f "$folder_name"/*

        # Show staged files to verify
        echo "Staging files:"
        git ls-files --stage

        # Commit and push only if there are changes
        git diff --cached --quiet || (git commit -m "Add downloaded files to $folder_name" && git push)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
